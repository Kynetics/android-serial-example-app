import java.util.function.Predicate

/*
 * Copyright (C)  2025 Kynetics, Inc.
 * SPDX-License-Identifier: Apache-2.0
 */

apply plugin: 'com.android.application'

android {
    namespace 'com.kynetics.android_serial_tty_example'
    compileSdk 35
    defaultConfig {
        applicationId "com.kynetics.android_serial_tty_example"
        minSdkVersion 24
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 35
        versionCode 4
        versionName "1.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def KyneticsKeystorePass = System.getenv("KYNETICS_KEYSTORE_PASS")
    def KyneticsKeyAlias = System.getenv("KYNETICS_KEY_ALIAS")
    def KyneticsKeyPass = System.getenv("KYNETICS_KEY_PASS")

    def envs= [KyneticsKeystorePass, KyneticsKeyAlias, KyneticsKeyPass]
    def signWithKyneticsKey = envs.stream().allMatch(new Predicate<String>() {
        @Override
        boolean test(String s) {
            return s != null && !s.isEmpty()
        }
    })

    signingConfigs{
        if (signWithKyneticsKey) {
            kynetics {
                storePassword KyneticsKeystorePass
                keyAlias KyneticsKeyAlias
                keyPassword KyneticsKeyPass
                storeFile file('../keystore/kynetics.jks')
                v2SigningEnabled true
                v1SigningEnabled true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        if (signWithKyneticsKey) {
            kynetics_key {
                signingConfig signingConfigs.kynetics
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                matchingFallbacks = ['release', 'debug']
            }
        }
    }

    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
